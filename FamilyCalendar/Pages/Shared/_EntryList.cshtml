@model EntryListModel

<div id="entryList" @(Model.OutOfBandSwap ? "hx-swap-oob=\"true\"" : "") class="grid grid-cols-1 gap-5">
  <div class="flex flex-col gap-2">
    @foreach (var entry in await Model.GetEntriesAsync())
    {
      <div class="flex flex-col gap-2 card @(Model.IsNewEntry(entry) ? "animate-card-flash" : "")">
        <div class="flex flex-row gap-2">
          <h3 class="flex-auto break-all text-sm text-gray-700">@entry.Title</h3>
          <form hx-delete hx-page="Manage" hx-page-handler="DeleteEntry">
            <button type="submit" class="btn btn-red text-xs">
              @await Html.PartialAsync("~/Pages/Shared/Icons/_Delete.cshtml")
            </button>
            <input type="hidden" name="EntryId" value="@entry.Id" />
            @Html.AntiForgeryToken()
          </form>
        </div>
        <div class="flex flex-row gap-2">
          <p>
            <span class="text-red-500">@await Html.PartialAsync("~/Pages/Shared/Icons/_Date.cshtml")</span>
            <span class="text-sm text-gray-500">@Html.DisplayFor(_ => entry.Date)</span>
          </p>
          @if (!string.IsNullOrEmpty(entry.Location))
          {
            <p>
              <span class="text-red-500">@await Html.PartialAsync("~/Pages/Shared/Icons/_Location.cshtml")</span>
              <span class="text-sm text-gray-500">@entry.Location</span>
            </p>
          }
          @if (entry.Participants.Count > 0)
          {
            <p>
              <span class="text-red-500">@await Html.PartialAsync("~/Pages/Shared/Icons/_Participant.cshtml")</span>
              <span class="text-sm text-gray-500">@string.Join(", ", entry.Participants)</span>
            </p>
          }
        </div>
      </div>
    }
  </div>
</div>
